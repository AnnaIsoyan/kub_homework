#namespace block
apiVersion: v1
kind: Namespace
metadata:
  name: my-ns
  labels:
    name: my-ns
---
#deployment block
#manages version right deployment process. Builds ReplicaSet under the hood
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: my-ns #must be created imperative or declarative /kubectl create namespace my-ns/
spec:
  strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
  replicas: 2
  selector: #selector label will be === to template.metadata.labels which means that rs will manage and keep-alive /scaling + load-balancing/ all the pods with provided label
    matchLabels:
      app: v1
  template:
    metadata:
      labels:
        app: v1
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 5
          failureThreshold: 3